#[==== GENERAL ====]
# Act like GNU screen
# Undoing for now because C-a is used to go start of line by bash
#unbind C-b
#set -g prefix C-a

# Reload conf file
# Generates a can't establish session error which can be ignored
bind-key r source-file ~/.tmux.conf; display-message "~/.tmux.conf is reloaded"

# Fixes some delay issues in vim
set -sg escape-time 1

# improve colors
set -g default-terminal "screen-256color"

# increase scroll-back history
set -g history-limit 5000

#[==== COLORS AND STATUSBAR ====]
# Default colors
set -g status-bg black
set -g status-fg white
 
# Inactive windows in status bar
set-window-option -g window-status-format '#[fg=yellow]#I#[fg=blue]:#[fg=cyan,dim]#W#[fg=grey,dim]#F'
 
# Current or active window in status bar
set-window-option -g window-status-current-format '#[bg=red,fg=white,bold]#I#[bg=red,fg=white,bold]:#[bg=red,fg=white,bold]#W#F'
 
# Status Bar
set -g status-left '#[fg=green][#[bg=black,fg=cyan]#S#[fg=green]]'

# Shows the pane number
set -g status-right '#[fg=yellow]#P'
 
#[==== NAVIGATION ====]
# Act like vim
setw -g mode-keys vi

# Windows
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

#[==== WINDOW MANAGEMENT ====]
# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Rebind window splits
bind-key | split-window -h 
bind-key - split-window

# Start window & pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

# set up aliases for temporarily maximizing panes
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp

unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Pane movement
unbind Left
bind-key Left command-prompt -p "join pane from:"  "join-pane -s ':%%'"
unbind Right
bind-key Right command-prompt -p "send pane to:"  "join-pane -t ':%%'"

#[==== MISC ====]
# Copy and paste like vim
# Reference: https://gist.github.com/brendanhay/1769870
# Go there for Linux bindings also
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Disable prompt for kiling window
# Reference: http://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window
bind-key x kill-pane

# Pass through a ctrl-a if you press it twice
# Useful if you're using tmux on a local session that connects to a remote tmux
bind C-a send-prefix

#[==== COPY AND PASTE ON OSX (ABANDONED) ====]
# Enabling below will break copy-and-paste using the mouse in iTerm2!!!!
# Enable mouse support in ~/.tmux.conf
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-window-option -g mode-mouse on

# If the above is enabled, then that means we'll need to do some extra
# configuration so we can copy and paste with OS X using visual select
# enable copy-paste http://goo.gl/DN82E
# enable RubyMotion http://goo.gl/WDlCy
#set -g default-command "reattach-to-user-namespace -l bash"
#bind-key 'p' run-shell "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
#bind-key 'y' send-keys x\; run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"\; display-message "copied"
# Need to change to 'x' as we already have 'y' bound above
#bind-key -t vi-copy 'x' copy-selection

# Copy/Paste workflow with OS X
#Enter select mode with C-a [
#I can now move around with vim keys.
#I hit v to begin selecting.
#I now hit (i think) C-a y to yank my selected test. (I saw "copied" on my first try)
#Now I paste but it doesn't seem to have worked. Either C-a p or OS level paste.

